inserthead() → Time: O(1), Space: O(1)
cnvrtll() → Time: O(n), Space: O(1)
display() → Time: O(n), Space: O(1)

Overall Time Complexity: O(n)
Overall Space Complexity: O(n) (due to list storage)

class Node
{
    int data;
    Node next;
    Node(int data1,Node next1)
    {
        this.data=data1;
        this.next=next1;
    }
     Node(int data1)
    {
        this.data=data1;
        this.next=null;
    }
}
class ll 
{
    static Node cnvrtll(int[] arr) 
    {
        Node head=new Node(arr[0]);
        Node mover=head;
        for(int i=1;i<arr.length;i++)
        {
            Node temp=new Node(arr[i]);
            mover.next=temp;
            mover=temp;
        }
        return head;
    }
     static Node inserthead(Node head,int val) 
     {
         Node fi=new Node(val);
         fi.next=head;
         head=fi;
         return head;
     }
    static void display(Node head) {
        Node temp=head;
        while(temp!=null)
        {
            System.out.print(temp.data+" -> ");
            temp=temp.next;
        }
         System.out.println("null");
    }
}
public class Main {
    public static void main(String[] args)
    {
        int[] arr={2,3,4,5,6,7};
        Node head=ll.cnvrtll(arr);
        System.out.println("Before inserting head: ");
       ll.display(head);
       head=ll.inserthead(head,1);
        System.out.println("After inserting head: ");
       ll.display(head);
    }
}
