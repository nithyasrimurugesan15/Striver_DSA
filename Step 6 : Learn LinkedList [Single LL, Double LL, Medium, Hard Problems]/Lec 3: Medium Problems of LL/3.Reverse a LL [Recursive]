t.c : o(n)
s.c : o(1)

import java.util.*;
class Node
{
    int data;
    Node next;
    Node(int data1,Node next1,Node prev1)
    {
        this.data=data1;
        this.next=next1;
    }
     Node(int data1)
    {
        this.data=data1;
        this.next=null;
    }
}
class ll {
    static Node cnvrtdll(int[] arr) 
    {
        Node head=new Node(arr[0]);
        Node prev=head;
        for(int i=1;i<arr.length;i++)
        {
            Node temp=new Node(arr[i]);
            prev.next=temp;
            prev=temp;
        }
        return head;
    }
     static Node reverse1d(Node head) 
    {
       if(head==null || head.next==null)
       {
           return head;
       }
       Node newhead=reverse1d(head.next);
       Node front=head.next;
       front.next=head;
       head.next=null;
       return newhead;
    }
    static void display(Node head) {
        Node temp=head;
        while(temp!=null)
        {
            System.out.print(temp.data+" -> ");
            temp=temp.next;
        }
         System.out.println("null");
    }
}
public class Main {
    public static void main(String[] args)
    {
        int[] arr={1,2,3,4,5,6};
        Node head=ll.cnvrtdll(arr);
        System.out.println(" 1d linked list ");
       ll.display(head);
       head=ll.reverse1d(head);
        System.out.println("reverse 1d linked list ");
       ll.display(head);
     
    }
}
