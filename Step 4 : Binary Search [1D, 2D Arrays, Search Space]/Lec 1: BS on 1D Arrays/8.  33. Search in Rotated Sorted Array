https://leetcode.com/problems/search-in-rotated-sorted-array/description/

Brute : -> linear search ->  o(n) an o(1) 

class Solution {
    public int search(int[] nums, int target) {
     for(int i=0;i<nums.length;i++)
     {
           if(nums[i]==target)
        {
            return i;
        }
     }   
     return -1;
    }
}

Optimal -> Binary search -> o(log n) and o(1)

class Solution 
{
    public int search(int[] nums, int target) 
    {
      int s=0;
      int e=nums.length-1;
      while(s<=e)
      {
        int mid=s+(e-s)/2;
        if(nums[mid]==target)
        {
           return mid;
        }
        else if(nums[s]<=nums[mid])
        {
         if(nums[s]<=target && target<=nums[mid])
        {
           e=mid-1;
        }
        else
        {
           s=mid+1;
        }
      }
      else
      {
        if(nums[mid]<=target && target<=nums[e])
        {
            s=mid+1;
        }
        else
        {
            e=mid-1;
        }
      }
      }  
      return -1;
    }
}
