https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/

BRUTE : O(N*2) AND O(1)

class Solution 
{
    public int maxProfit(int[] prices) 
    {
        int max=0;
        for(int i=0;i<prices.length;i++)
        {
            for(int j=i+1;j<prices.length;j++)
            {
                if(prices[i]<prices[j])
                {
                 int diff=prices[j]-prices[i];
                 if(diff>max)
                 {
                    max=diff;
                 }
                }
                
            }
        }
        return max;
    }
}


OPTIMAL : O(N) AND O(1)

class Solution {
    public int maxProfit(int[] prices) {
        int min=Integer.MAX_VALUE;
        int max=0;
        for(int i=0;i<prices.length;i++)
        {
           if(prices[i]<min)
           {
            min=prices[i];
           }
           else
           {
            int p=prices[i]-min;
            if(p>max)
            {
                max=p;
            }
           }
        }
        return max;
    }
}
