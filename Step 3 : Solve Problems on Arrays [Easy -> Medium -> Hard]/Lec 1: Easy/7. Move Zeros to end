Brute approach :

t.c : o(n) and space o(n)

public class tUf {
    public static int[] moveZeros(int n, int []a) {
       
        ArrayList<Integer> temp = new ArrayList<>();
      
        for (int i = 0; i < n; i++) {
            if (a[i] != 0)
                temp.add(a[i]);
        }

        int nz = temp.size();

        for (int i = 0; i < nz; i++) {
            a[i] = temp.get(i);
        }
        for (int i = nz; i < n; i++) {
            a[i] = 0;
        }
        return a;
    }

OPTIMAL :

t.c : o(n) and space o(1)

class Solution {
    public void moveZeroes(int[] nums) 
    {
        int j=0;
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]==0)
            {
              continue;
            }
            else
            {
                int temp=nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
                j++;
            }
        }
    }
}
